ratioDI2=ratioDI2 %>% dplyr::rename(DI=`2017`)
di <- merge(ratioDI2, cities_coordinates)
di = as.data.frame(di)
class(di$lat)
class(di$lng)
cities_bound <- geojsonio::geojson_read("geneva_municipalities_boundaries.geojson", what="sp")
output$mymap <- renderLeaflet({
if(input$ClasserPar == "Infractions")
{
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorQuantile("YlOrRd", domain = infractions$data)
m %>% addPolygons(
fillColor = ~pal(NInfractions_08_19$`2019`),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(infractions$city, ":", infractions$data),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Infractions1000"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorQuantile("YlOrRd", domain = infractions_for_1000_inhab$inf)
m %>% addPolygons(
fillColor = ~pal(infractions_for_1000_inhab$inf),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(infractions_for_1000_inhab$city, ":", infractions_for_1000_inhab$inf, "violations / 1000 inhab."),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Medecins"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorQuantile("YlOrRd", domain = medecins$nb_medecins, n=2)
m %>% addPolygons(
fillColor = ~pal(medecins$nb_medecins),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(medecins$city, ":", medecins$nb_medecins),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Medecins1000"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorQuantile("YlOrRd", domain = medecins_for_1000_inhab$nb_medecins_for_1000_inhab, n=2)
m %>% addPolygons(
fillColor = ~pal(medecins_for_1000_inhab$nb_medecins_for_1000_inhab),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(medecins_for_1000_inhab$city, ":", medecins_for_1000_inhab$nb_medecins_for_1000_inhab, "doctors / 1000 inhab."),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Ecoles"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorNumeric("YlOrRd", domain = ecoles$nb_ecole)
m %>% addPolygons(
fillColor = ~pal(ecoles$nb_ecole),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(ecoles$city, ":", ecoles$nb_ecole),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Population"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorQuantile("YlOrRd", domain = hab$nb_hab)
m %>% addPolygons(
fillColor = ~pal(hab$nb_hab),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(hab$city, ":", hab$nb_hab),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "SupermarchesKM2"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorNumeric("YlOrRd", domain = supermarkets$nb_supermarkets)
m %>% addPolygons(
fillColor = ~pal(supermarkets$nb_supermarkets),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(supermarkets$city, ":", supermarkets$nb_supermarkets, "supermarkets /Km^2"),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Superficie"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorNumeric("YlOrRd", domain = superficie$km2)
m %>% addPolygons(
fillColor = ~pal(superficie$km2),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(superficie$city, ":", superficie$km2, "Km^2"),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
} else if(input$ClasserPar == "Investissement"){
m <- leaflet()
m <- leaflet(cities_bound) %>%
setView(lng = 6.1667, lat=46.2, zoom = 1) %>%
fitBounds(m, lng1=5.932896, lat1=46.311005, lng2=6.319477, lat2=46.128334) %>%
addTiles() %>%
addMeasure()
m %>% addPolygons()
pal <- colorQuantile("YlOrRd", domain = di$DI)
m %>% addPolygons(
fillColor = ~pal(di$DI),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = paste(di$city, ":", di$DI, "CHF spent by the municipality / inhab."),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
}
})
#############################################################
output$selectedCommune <- renderText({
if(input$navPage == "Population" ||
input$navPage == "Immobilier" ||
input$navPage == "Commodites" ||
input$navPage == "Autres"){
MaCommune
} else {
MaCommune <<- input$navPage
}
})
### output description communes #############################
output$DescriptionAirelaVille <- renderText({paste("<img src='armoiries/AirelaVille.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractAirelaVille,"</p></br></br></br></br>")})
output$DescriptionAnieres <- renderText({paste("<img src='armoiries/Anieres.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractAnieres,"</p></br></br></br></br>")})
output$DescriptionAvully <- renderText({paste("<img src='armoiries/Avully.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractAvully,"</p></br></br></br></br>")})
output$DescriptionAvusy <- renderText({paste("<img src='armoiries/Avusy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractAvusy,"</p></br></br></br></br>")})
output$DescriptionBardonnex <- renderText({paste("<img src='armoiries/Bardonnex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractBardonnex,"</p></br></br></br></br>")})
output$DescriptionBellevue <- renderText({paste("<img src='armoiries/Bellevue.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractBellevue,"</p></br></br></br></br>")})
output$DescriptionBernex <- renderText({paste("<img src='armoiries/Bernex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractBernex,"</p></br></br></br></br>")})
output$DescriptionCarouge <- renderText({paste("<img src='armoiries/Carouge.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCarouge,"</p></br></br></br></br>")})
output$DescriptionCartigny <- renderText({paste("<img src='armoiries/Cartigny.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCartigny,"</p></br></br></br></br>")})
output$DescriptionCeligny <- renderText({paste("<img src='armoiries/Celigny.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCeligny,"</p></br></br></br></br>")})
output$DescriptionChancy <- renderText({paste("<img src='armoiries/Chancy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractChancy,"</p></br></br></br></br>")})
output$DescriptionCheneBougeries <- renderText({paste("<img src='armoiries/CheneBougeries.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCheneBougeries,"</p></br></br></br></br>")})
output$DescriptionCheneBourg <- renderText({paste("<img src='armoiries/CheneBourg.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCheneBourg,"</p></br></br></br></br>")})
output$DescriptionChoulex <- renderText({paste("<img src='armoiries/Choulex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractChoulex,"</p></br></br></br></br>")})
output$DescriptionCollexBossy <- renderText({paste("<img src='armoiries/CollexBossy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCollexBossy,"</p></br></br></br></br>")})
output$DescriptionCollongeBellerive <- renderText({paste("<img src='armoiries/CollongeBellerive.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCollongeBellerive,"</p></br></br></br></br>")})
output$DescriptionCologny <- renderText({paste("<img src='armoiries/Cologny.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCologny,"</p></br></br></br></br>")})
output$DescriptionConfignon <- renderText({paste("<img src='armoiries/Confignon.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractConfignon,"</p></br></br></br></br>")})
output$DescriptionCorsier <- renderText({paste("<img src='armoiries/Corsier.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractCorsier,"</p></br></br></br></br>")})
output$DescriptionDardagny <- renderText({paste("<img src='armoiries/Dardagny.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractDardagny,"</p></br></br></br></br>")})
output$DescriptionGeneve <- renderText({paste("<img src='armoiries/Geneve.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractGeneve,"</p></br></br></br></br>")})
output$DescriptionGenthod <- renderText({paste("<img src='armoiries/Genthod.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractGenthod,"</p></br></br></br></br>")})
output$DescriptionGrandSaconnex <- renderText({paste("<img src='armoiries/GrandSaconnex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractGrandSaconnex,"</p></br></br></br></br>")})
output$DescriptionGy <- renderText({paste("<img src='armoiries/Gy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractGy,"</p></br></br></br></br>")})
output$DescriptionHermance <- renderText({paste("<img src='armoiries/Hermance.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractHermance,"</p></br></br></br></br>")})
output$DescriptionJussy <- renderText({paste("<img src='armoiries/Jussy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractJussy,"</p></br></br></br></br>")})
output$DescriptionLaconnex <- renderText({paste("<img src='armoiries/Laconnex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractLaconnex,"</p></br></br></br></br>")})
output$DescriptionLancy <- renderText({paste("<img src='armoiries/Lancy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractLancy,"</p></br></br></br></br>")})
output$DescriptionMeinier <- renderText({paste("<img src='armoiries/Meinier.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractMeinier,"</p></br></br></br></br>")})
output$DescriptionMeyrin <- renderText({paste("<img src='armoiries/Meyrin.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractMeyrin,"</p></br></br></br></br>")})
output$DescriptionOnex <- renderText({paste("<img src='armoiries/Onex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractOnex,"</p></br></br></br></br>")})
output$DescriptionPerlyCertoux <- renderText({paste("<img src='armoiries/PerlyCertoux.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractPerlyCertoux,"</p></br></br></br></br>")})
output$DescriptionPlanlesOuates <- renderText({paste("<img src='armoiries/PlanlesOuates.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractPlanlesOuates,"</p></br></br></br></br>")})
output$DescriptionPregnyChambesy <- renderText({paste("<img src='armoiries/PregnyChambesy.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractPregnyChambesy,"</p></br></br></br></br>")})
output$DescriptionPresinge <- renderText({paste("<img src='armoiries/Presinge.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractPresinge,"</p></br></br></br></br>")})
output$DescriptionPuplinge <- renderText({paste("<img src='armoiries/Puplinge.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractPuplinge,"</p></br></br></br></br>")})
output$DescriptionRussin <- renderText({paste("<img src='armoiries/Russin.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractRussin,"</p></br></br></br></br>")})
output$DescriptionSatigny <- renderText({paste("<img src='armoiries/Satigny.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractSatigny,"</p></br></br></br></br>")})
output$DescriptionSoral <- renderText({paste("<img src='armoiries/Soral.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractSoral,"</p></br></br></br></br>")})
output$DescriptionThonex <- renderText({paste("<img src='armoiries/Thonex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractThonex,"</p></br></br></br></br>")})
output$DescriptionTroinex <- renderText({paste("<img src='armoiries/Troinex.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractTroinex,"</p></br></br></br></br>")})
output$DescriptionVandoeuvres <- renderText({paste("<img src='armoiries/Vandoeuvres.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractVandoeuvres,"</p></br></br></br></br>")})
output$DescriptionVernier <- renderText({paste("<img src='armoiries/Vernier.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractVernier,"</p></br></br></br></br>")})
output$DescriptionVersoix <- renderText({paste("<img src='armoiries/Versoix.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractVersoix,"</p></br></br></br></br>")})
output$DescriptionVeyrier <- renderText({paste("<img src='armoiries/Veyrier.png' style='float:left; margin-right:10px; margin-top:5px'><p align='justify'>",abstractVeyrier,"</p></br></br></br></br>")})
#############################################################
#### Population ###############################################
# Texte
output$PopulationCommune <- renderText({
updateContentPopulation()
})
updateContentPopulation <- eventReactive(input$navPage,{
if(input$navPage == "Population")
{
paste(
"<p><b>Nombre d'habitants (2019): </b> ",freturnpopulation(MaCommune),
"</p><p><b>Nombre d'habitants par km2 (2019): </b>",freturndensitepopulation(MaCommune),
"</p><p><b>Superficie de la commune en km2: </b>",freturnsuperficie(MaCommune),
"</br>"
)
}
})
# PLOT 1
output$PopulationCommune_Plot1 <- renderPlot({
updateContentPopulation_Plot1()
})
updateContentPopulation_Plot1 <- eventReactive(input$navPage,{
if(input$navPage == "Population")
{
fplotpopulation(MaCommune)
}
})
## PLOT 2
#output$PopulationCommune_Plot2 <- renderPlot({
#    updateContentPopulation_Plot2()
#})
#updateContentPopulation_Plot2 <- eventReactive(input$navPage,{
#    if(input$navPage == "Population")
#    {
#        fplotdensitepopulation(MaCommune)
#    }
#})
#############################################################
#### Immobilier ###############################################
# Texte
output$ImmobilierCommune <- renderText({
updateContentImmobilier()
})
updateContentImmobilier <- eventReactive(input$navPage,{
if(input$navPage == "Immobilier"){
paste(
"<p><b>Loyer moyen d'un appartement de 100m2 (2019): </b> ",freturnloyer(MaCommune),
"</p><p><b>Prix mediane d'un appartement de 100m2 (2017): </b>",freturnprixappart(MaCommune),
"</p><p><b>Prix mediane d'une villa (Taille inconnue, 2017): </b>",freturnprixvilla(MaCommune),
"</br>"
)
}
})
# PLOT 1
output$ImmobilierCommune_Plot1 <- renderPlot({
updateContentImmobilier_Plot1()
})
updateContentImmobilier_Plot1 <- eventReactive(input$navPage,{
if(input$navPage == "Immobilier")
{
fplotloyer(MaCommune)
}
})
# PLOT 2
output$ImmobilierCommune_Plot2 <- renderPlot({
updateContentImmobilier_Plot2()
})
updateContentImmobilier_Plot2 <- eventReactive(input$navPage,{
if(input$navPage == "Immobilier")
{
fplotprixappart(MaCommune)
}
})
# PLOT 3
output$ImmobilierCommune_Plot3 <- renderPlot({
updateContentImmobilier_Plot3()
})
updateContentImmobilier_Plot3 <- eventReactive(input$navPage,{
if(input$navPage == "Immobilier")
{
fplotprixvilla(MaCommune)
}
})
#############################################################
#### Commodités ###############################################
output$CommoditesCommune <- renderText({
updateContentCommodites()
})
updateContentCommodites <- eventReactive(input$navPage,{
if(input$navPage == "Commodites"){
paste(
"<p><b>Nombre de supermarchés par km2: </b> ",freturnsupermarche(MaCommune),
"</p><p><b>Nombre d'ecoles par km2: </b>",freturnecole(MaCommune),
"</p><p><b>Nombre de parcs par km2: </b>",freturnparc(MaCommune),
"</br>"
)
}
})
#############################################################
#### Autres ###############################################
output$AutresCommune <- renderText({
updateContentAutres()
})
updateContentAutres <- eventReactive(input$navPage,{
if(input$navPage == "Autres"){
paste(
"<p><b>Nombre d'infractions du Code Penal pour 1000 habitants (2019): </b> ",freturninfraction(MaCommune),
"</p><p><b>Depenses d'investissement de la commmune par habitant (2017): </b>",freturnDI(MaCommune),
"</p><p><b>Nombre de medecins pour 1000 habitants: </b>",freturnmedecin(MaCommune),
"</br>"
)
}
})
# PLOT 1
output$AutresCommune_Plot1 <- renderPlot({
updateContentAutres_Plot1()
})
updateContentAutres_Plot1 <- eventReactive(input$navPage,{
if(input$navPage == "Autres")
{
fplotinfraction(MaCommune)
}
})
# PLOT 2
output$AutresCommune_Plot2 <- renderPlot({
updateContentAutres_Plot2()
})
updateContentAutres_Plot2 <- eventReactive(input$navPage,{
if(input$navPage == "Autres")
{
fplotratioDI(MaCommune)
}
})
#############################################################
}
# Run the application
shinyApp(ui = ui, server = server)
#INFRACTIONS DATA MODELLING
NInfractions_08_19_2=NInfractions_08_19
NInfractions_08_19_2=NInfractions_08_19_2 %>%dplyr::rename(city=`...1`)
NInfractions_08_19_2=NInfractions_08_19_2[-1,-2]
NInfractions_19_2=NInfractions_08_19_2 %>%dplyr::select(city,`2019`)
infractions <- merge(NInfractions_19_2, cities_coordinates)
infractions = as.data.frame(infractions)
infractions=infractions %>% dplyr::rename(data=`2019`)
infractions$lng= as.character(infractions$lng)
class(infractions$lng)
#INFRACTIONS DATA MODELLING
NInfractions_08_19_2=NInfractions_08_19
NInfractions_08_19_2=NInfractions_08_19_2 %>%dplyr::rename(city=`...1`)
NInfractions_08_19_2=NInfractions_08_19_2[-1,-2]
NInfractions_19_2=NInfractions_08_19_2 %>%dplyr::select(city,`2019`)
infractions <- merge(NInfractions_19_2, cities_coordinates)
cities_coordinates=Latitude_Longitude
cities_coordinates=cities_coordinates %>% dplyr::rename(city=`...1`)
cities_coordinates=cities_coordinates %>% dplyr::rename(lng=lon)
cities_bound <- geojsonio::geojson_read("geneva_municipalities_boundaries.geojson", what="sp")
#INFRACTIONS DATA MODELLING
NInfractions_08_19_2=NInfractions_08_19
NInfractions_08_19_2=NInfractions_08_19_2 %>%dplyr::rename(city=`...1`)
NInfractions_08_19_2=NInfractions_08_19_2[-1,-2]
NInfractions_19_2=NInfractions_08_19_2 %>%dplyr::select(city,`2019`)
infractions <- merge(NInfractions_19_2, cities_coordinates)
infractions = as.data.frame(infractions)
infractions=infractions %>% dplyr::rename(data=`2019`)
infractions$lng= as.character(infractions$lng)
class(infractions$lng)
infractions$lng= as.numeric(infractions$lng)
class(infractions$lng)
infractions$lat= as.character(infractions$lat)
class(infractions$lat)
infractions$lat= as.numeric(infractions$lat)
class(infractions$lat)
#INFRACTIONS / 1000 INHAB. DATA MODELLING
ratioInfraction2=ratioInfraction
setDT(ratioInfraction2, keep.rownames = TRUE)[]
ratioInfraction2=ratioInfraction2 %>%dplyr::rename(city=rn)
ratioInfraction2=ratioInfraction2[-1,-2]
ratioInfraction2=ratioInfraction2 %>%dplyr::select(city,`2019`)
View(ratioInfraction2)
#INFRACTIONS / 1000 INHAB. DATA MODELLING
ratioInfraction2=ratioInfraction
View(ratioInfraction2)
View(ratioInfraction)
View(NInfractions_19_2)
View(ratio_ecole)
View(ratio_NParcs)
View(ratioDI)
View(ratioInfraction)
source("Data_Analysis.R")
View(ratioDI)
View(ratioInfraction)
cities_coordinates=Latitude_Longitude
cities_coordinates=cities_coordinates %>% dplyr::rename(city=`...1`)
cities_coordinates=cities_coordinates %>% dplyr::rename(lng=lon)
cities_bound <- geojsonio::geojson_read("geneva_municipalities_boundaries.geojson", what="sp")
#INFRACTIONS DATA MODELLING
NInfractions_08_19_2=NInfractions_08_19
NInfractions_08_19_2=NInfractions_08_19_2 %>%dplyr::rename(city=`...1`)
NInfractions_08_19_2=NInfractions_08_19_2[-1,-2]
NInfractions_19_2=NInfractions_08_19_2 %>%dplyr::select(city,`2019`)
infractions <- merge(NInfractions_19_2, cities_coordinates)
infractions = as.data.frame(infractions)
infractions=infractions %>% dplyr::rename(data=`2019`)
infractions$lng= as.character(infractions$lng)
shiny::runApp()
View(freturnsuperficie)
View(freturnsuperficie)
View(freturnsuperficie)
View(freturnsuperficie)
View(freturnsuperficie)
